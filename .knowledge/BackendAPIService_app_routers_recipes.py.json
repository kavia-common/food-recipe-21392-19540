{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing recipes in a web application, including listing, retrieving by ID, and searching recipes. It uses FastAPI framework, SQLAlchemy ORM, and includes helper functions for data transformation.", "external_files": ["../db", "../models", "../schemas"], "external_methods": ["get_db", "models.Recipe", "schemas.Recipe", "schemas.Image", "schemas.RecipeList"], "published": ["router"], "classes": [], "methods": [{"name": "List[str] _split_lines(value: str | None)", "description": "Splits a string into a list of stripped lines, filtering out empty lines.", "scope": "", "scopeKind": ""}, {"name": "schemas.Recipe _to_schema_recipe(r: models.Recipe)", "description": "Converts a SQLAlchemy Recipe model instance to a schemas.Recipe object, processing ingredients, instructions, and images.", "scope": "", "scopeKind": ""}, {"name": "list_recipes(db: Session = Depends(get_db))", "description": "API endpoint to retrieve a list of all recipes.", "scope": "", "scopeKind": ""}, {"name": "get_recipe(recipe_id: int, db: Session = Depends(get_db))", "description": "API endpoint to retrieve a single recipe by its ID.", "scope": "", "scopeKind": ""}, {"name": "search_recipes(q: str = Query(\"\", description=\"Search query\"), db: Session = Depends(get_db))", "description": "API endpoint to search recipes by title or ingredients using a query string.", "scope": "", "scopeKind": ""}], "calls": ["db.query(models.Recipe).all()", "db.get(models.Recipe, recipe_id)", "db.query(models.Recipe).filter(...)", "_to_schema_recipe(r)", "_split_lines(r.ingredients)", "_split_lines(r.instructions)", "schemas.Image.model_validate(img)"], "search-terms": ["FastAPI recipes endpoints", "SQLAlchemy Recipe model", "recipe search", "API route definitions", "recipe list retrieval", "recipe by ID fetching"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "_split_lines", "path": "/home/kavia/workspace/code-generation/food-recipe-21392-19540/BackendAPIService/app/routers/recipes.py", "pattern": "/^def _split_lines(value: str | None) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "function", "signature": "(value: str | None)"}, {"_type": "tag", "name": "_to_schema_recipe", "path": "/home/kavia/workspace/code-generation/food-recipe-21392-19540/BackendAPIService/app/routers/recipes.py", "pattern": "/^def _to_schema_recipe(r: models.Recipe) -> schemas.Recipe:$/", "language": "Python", "typeref": "typename:schemas.Recipe", "kind": "function", "signature": "(r: models.Recipe)"}, {"_type": "tag", "name": "get_recipe", "path": "/home/kavia/workspace/code-generation/food-recipe-21392-19540/BackendAPIService/app/routers/recipes.py", "pattern": "/^def get_recipe(recipe_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(recipe_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_recipes", "path": "/home/kavia/workspace/code-generation/food-recipe-21392-19540/BackendAPIService/app/routers/recipes.py", "pattern": "/^def list_recipes(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/food-recipe-21392-19540/BackendAPIService/app/routers/recipes.py", "pattern": "/^router = APIRouter(tags=[\"recipes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search_recipes", "path": "/home/kavia/workspace/code-generation/food-recipe-21392-19540/BackendAPIService/app/routers/recipes.py", "pattern": "/^def search_recipes(q: str = Query(\"\", description=\"Search query\"), db: Session = Depends(get_db)/", "language": "Python", "kind": "function", "signature": "(q: str = Query(\"\", description=\"Search query\"), db: Session = Depends(get_db))"}], "hash": "9855c4b4f849e30296c91a7f734b7cc8", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/routers/recipes.py", "fields": [{"name": "router = APIRouter(tags=[\"recipes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}